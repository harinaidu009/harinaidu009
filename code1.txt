<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>E-commerce App</title>
  <script src="https://cdn.jsdelivr.net/npm/react@18/umd/react.development.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18/umd/react-dom.development.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@babel/standalone@7/babel.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
  <div id="root"></div>

  <script type="text/babel">
    const { useState } = React;

    // Mock product data
    const products = [
      { id: 1, name: "Laptop", price: 999, image: "https://via.placeholder.com/150" },
      { id: 2, name: "Headphones", price: 99, image: "https://via.placeholder.com/150" },
      { id: 3, name: "Smartphone", price: 699, image: "https://via.placeholder.com/150" },
    ];

    // Product Card Component
    const ProductCard = ({ product, addToCart }) => (
      <div className="border rounded-lg p-4 shadow-md flex flex-col items-center">
        <img src={product.image} alt={product.name} className="w-32 h-32 mb-2" />
        <h3 className="text-lg font-semibold">{product.name}</h3>
        <p className="text-gray-600">${product.price}</p>
        <button
          onClick={() => addToCart(product)}
          className="mt-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        >
          Add to Cart
        </button>
      </div>
    );

    // Cart Item Component
    const CartItem = ({ item, removeFromCart }) => (
      <div className="flex justify-between items-center border-b py-2">
        <div>
          <h4 className="font-semibold">{item.name}</h4>
          <p>${item.price} x {item.quantity}</p>
        </div>
        <button
          onClick={() => removeFromCart(item.id)}
          className="text-red-500 hover:text-red-700"
        >
          Remove
        </button>
      </div>
    );

    // Main App Component
    const App = () => {
      const [cart, setCart] = useState([]);
      const [showCart, setShowCart] = useState(false);
      const [checkoutComplete, setCheckoutComplete] = useState(false);

      const addToCart = (product) => {
        setCart((prevCart) => {
          const existingItem = prevCart.find((item) => item.id === product.id);
          if (existingItem) {
            return prevCart.map((item) =>
              item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
            );
          }
          return [...prevCart, { ...product, quantity: 1 }];
        });
      };

      const removeFromCart = (id) => {
        setCart((prevCart) => prevCart.filter((item) => item.id !== id));
      };

      const getTotal = () => {
        return cart.reduce((total, item) => total + item.price * item.quantity, 0);
      };

      const handleCheckout = () => {
        if (cart.length === 0) {
          alert("Your cart is empty!");
          return;
        }
        setShowCart(false);
        setCheckoutComplete(true);
        setCart([]);
      };

      return (
        <div className="container mx-auto p-4">
          <header className="flex justify-between items-center mb-6">
            <h1 className="text-2xl font-bold">E-commerce Store</h1>
            <button
              onClick={() => setShowCart(!showCart)}
              className="bg-gray-800 text-white px-4 py-2 rounded hover:bg-gray-900"
            >
              Cart ({cart.reduce((sum, item) => sum + item.quantity, 0)})
            </button>
          </header>

          {checkoutComplete ? (
            <div className="text-center">
              <h2 className="text-xl font-semibold mb-4">Thank You for Your Purchase!</h2>
              <p>Your order has been successfully placed.</p>
              <button
                onClick={() => setCheckoutComplete(false)}
                className="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
              >
                Continue Shopping
              </button>
            </div>
          ) : showCart ? (
            <div>
              <h2 className="text-xl font-semibold mb-4">Your Cart</h2>
              {cart.length === 0 ? (
                <p>Your cart is empty.</p>
              ) : (
                <>
                  {cart.map((item) => (
                    <CartItem key={item.id} item={item} removeFromCart={removeFromCart} />
                  ))}
                  <div className="mt-4">
                    <p className="font-semibold">Total: ${getTotal()}</p>
                    <button
                      onClick={handleCheckout}
                      className="mt-2 bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600"
                    >
                      Checkout
                    </button>
                  </div>
                </>
              )}
              <button
                onClick={() => setShowCart(false)}
                className="mt-4 text-blue-500 hover:underline"
              >
                Back to Products
              </button>
            </div>
          ) : (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
              {products.map((product) => (
                <ProductCard key={product.id} product={product} addToCart={addToCart} />
              ))}
            </div>
          )}
        </div>
      );
    };

    // Render the app
    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<App />);
  </script>
</body>
</html>